/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
  &kp TAB      &kp Q     &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I           &kp O         &kp P       &kp BSPC
  &kp ESC      &kp A     &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K           &kp L      &kp SEMI        &kp SQT
&kp LSHFT      &kp Z     &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA         &kp DOT      &kp FSLH  &mt RSHFT RET
 &kp C_PP  &kp LCTRL  &kp LALT  &kp LGUI  &mo 2  &kp SPACE  &kp SPACE  &mo 1   &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        RAISE {
            bindings = <
 &kp TILDE     &kp LS(N1)        &kp LS(N2)        &kp LS(N3)    &kp LS(N4)      &kp LS(N5)    &kp LS(N6)      &kp LS(N7)       &kp LS(N8)        &kp LS(N9)         &kp LS(N0)       &kp PIPE
 &kp GRAVE   &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5  &kp NUMBER_6    &kp NUMBER_7     &kp NUMBER_8      &kp NUMBER_9       &kp NUMBER_0  &kp BACKSLASH
 &kp COMMA  &kp LESS_THAN  &kp GREATER_THAN         &kp EQUAL     &kp MINUS  &kp UNDERSCORE      &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp PERIOD
&kp ESCAPE      &kp LCTRL      &kp LEFT_ALT  &kp LEFT_COMMAND         &mo 3          &trans        &trans          &trans       &kp C_PREV           &kp END           &kp HOME     &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        LOWER {
            bindings = <
&kp TILDE  &kp LS(NUMBER_1)  &kp LS(N2)  &kp LS(NUMBER_3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)    &kp LS(N9)    &kp LS(N0)    &kp BSPC
  &kp DEL            &kp F1      &kp F2            &kp F3      &kp F4      &kp F5      &kp F6   &kp MINUS   &kp EQUAL      &kp LBKT      &kp RBKT    &kp BSLH
   &trans            &kp F7      &kp F8            &kp F9     &kp F10     &kp F11     &kp F12      &trans      &trans        &trans        &trans      &trans
   &trans            &trans      &trans            &trans      &trans      &trans      &trans       &mo 3  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
     &sys_reset     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &trans  &trans      &trans  &trans  &trans  &bt BT_CLR
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans      &trans  &trans  &trans      &trans
         &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans      &trans  &trans  &trans      &trans
    &bootloader           &trans           &trans           &trans           &trans           &trans  &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
